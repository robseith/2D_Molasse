Here, I describe the settings to restart an initial model

1.) Setting up an initial model starts at negative time (here - 40 000) and end up at t=0. From this time the "Injection"
scenario can beginn.
Changed Functions due to changed start time:
  Displacement function - 
  [./time_linear_increase]
    type = ParsedFunction
    value = 'if((t0+t)<20, 0, rate*tanh((t0+t)*0.1)*(t0+t))'
    vals = '0.001 40000'
    vars = 'rate t0' # Deformation rate of 1 mm/a ~ 0.001 m/a
  [../]
  Gravity Ramp - 
    [./gravity_ramp]
    type = ParsedVectorFunction
    value_x = 0
    value_y = -9.81*tanh(0.001*(t0+t)*(t0+t))
    value_z = 0
    vals = '40000'
    vars = 't0'
  [../]
  
  Export:
  We choose the way to load a .xda-file format from a new folder (.../LF_Output_Init). In this folder 
  all data will be written. As the mesh- file will be load in the checkpoint (.cpr-file), checkpoints must also be exported.
  [Outputs]
  file_base = Layered_Fault_M40_Y140_F5_Y20/LF_Output_Init
  output_initial = true
  exodus = true
  #csv = true
  xda = true
  checkpoint = true
  [./console]
    type = Console
    perf_log = true
    output_linear = true
    file_base = simulation
  [../]
  []
  
  
  2.) Loading the .xda-data 
  First a mesh-file have to be defined in the mesh options: 
 
 [Mesh]
  type = FileMesh
  file = Layered_Fault_M40_Y140_F5_Y20/LF_Output_Init_cp/0050_mesh.cpr
  []
  
  For loading the variables (disp_x, disp_y, disp_z) we use a 'userobject':
  [UserObjects]
  [./ex_disp_x_soln]
    type = SolutionUserObject
    system_variables = disp_x
    mesh = Layered_Fault_M40_Y140_F5_Y20/LF_Output_Init_0050_mesh.xda
    es = Layered_Fault_M40_Y140_F5_Y20/LF_Output_Init_0050.xda
  [../]
  [./ex_disp_y_soln]
    type = SolutionUserObject
    system_variables = disp_y
    mesh = Layered_Fault_M40_Y140_F5_Y20/LF_Output_Init_0050_mesh.xda
    es = Layered_Fault_M40_Y140_F5_Y20/LF_Output_Init_0050.xda
  [../]
  [./ex_disp_z_soln]
    type = SolutionUserObject
    system_variables = disp_z
    mesh = Layered_Fault_M40_Y140_F5_Y20/LF_Output_Init_0050_mesh.xda
    es = Layered_Fault_M40_Y140_F5_Y20/LF_Output_Init_0050.xda
  [../]
[]

That these user_objects can be used as a Boundary Condition a 'SolutionFunction' have to be defined.
  [./equilibrated_disp_x_func]
    type = SolutionFunction
    solution = ex_disp_x_soln
  [../]
  [./equilibrated_disp_y_func]
    type = SolutionFunction
    solution = ex_disp_y_soln
  [../]
  
  The Displacement of the initial model run are fixed to the BCs over the solution-function 
  at top, bottom, left and right side on the x / y direction
    [./hold_left_x]
    type = FunctionDirichletBC
    variable = disp_x
    boundary = 1
    function = equilibrated_disp_x_func
  [../]
  
  So most simple loading of a model is defined and for example a new modeling scenario can be defined - 
  In my case a injection scenario.
  
